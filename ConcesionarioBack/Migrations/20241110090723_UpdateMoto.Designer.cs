// <auto-generated />
using System;
using ConcesionarioBack.Common.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConcesionarioBack.Migrations
{
    [DbContext(typeof(ConcesionarioContext))]
    [Migration("20241110090723_UpdateMoto")]
    partial class UpdateMoto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConcesionarioBack.Common.Models.Carro", b =>
                {
                    b.Property<int>("CarroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarroId"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kilometraje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Nuevo")
                        .HasColumnType("bit");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.HasKey("CarroId");

                    b.ToTable("Carros");
                });

            modelBuilder.Entity("ConcesionarioBack.Common.Models.ListadoCarro", b =>
                {
                    b.Property<int>("ListaCarroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ListaCarroId"));

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.HasKey("ListaCarroId");

                    b.ToTable("ListadoCarros");
                });

            modelBuilder.Entity("ConcesionarioBack.Common.Models.ListadoMoto", b =>
                {
                    b.Property<int>("ListaMotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ListaMotoId"));

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.HasKey("ListaMotoId");

                    b.ToTable("ListadoMotos");
                });

            modelBuilder.Entity("ConcesionarioBack.Common.Models.Moto", b =>
                {
                    b.Property<int>("MotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MotoId"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("Cilindraje")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kilometraje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Nuevo")
                        .HasColumnType("bit");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.Property<string>("Velocidades")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MotoId");

                    b.ToTable("Motos");
                });

            modelBuilder.Entity("ConcesionarioBack.Common.Models.Venta", b =>
                {
                    b.Property<int>("VentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VentaId"));

                    b.Property<int?>("CarroId")
                        .HasColumnType("int");

                    b.Property<string>("CorreoComprador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MotoId")
                        .HasColumnType("int");

                    b.Property<string>("NombreComprador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoComprador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VentaId");

                    b.HasIndex("CarroId");

                    b.HasIndex("MotoId");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("ConcesionarioBack.Common.Models.Venta", b =>
                {
                    b.HasOne("ConcesionarioBack.Common.Models.Carro", "Carro")
                        .WithMany()
                        .HasForeignKey("CarroId");

                    b.HasOne("ConcesionarioBack.Common.Models.Moto", "Moto")
                        .WithMany()
                        .HasForeignKey("MotoId");

                    b.Navigation("Carro");

                    b.Navigation("Moto");
                });
#pragma warning restore 612, 618
        }
    }
}
